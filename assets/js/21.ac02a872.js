(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{438:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("相信很多同学都能够说出"),t("code",[s._v("var,let,const")]),s._v("三者之间的区别，即便说的不全，也总能说出其中几点内容，但如果问你"),t("code",[s._v("var")]),s._v("为什么可以重复声明，而let、const却不能重复声明呢，以及在全局作用域中，用"),t("code",[s._v("let")]),s._v("和"),t("code",[s._v("const")]),s._v(" 声明的变量没在 "),t("code",[s._v("window")]),s._v(" 上，那在哪里呢？我们如何去获取呢？这些应该有不少人不清楚吧，今天我们就一起来看看这三者之间的区别，以及揭开后面这几个问题的答案吧～")]),s._v(" "),t("p",[t("strong",[s._v("如果这篇文章有帮助到你，❤️关注+点赞❤️鼓励一下作者，文章公众号首发，关注 "),t("code",[s._v("前端南玖")]),s._v(" 第一时间获取最新的文章～")])]),s._v(" "),t("h2",{attrs:{id:"var"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[s._v("#")]),s._v(" var")]),s._v(" "),t("h3",{attrs:{id:"全局变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[s._v("#")]),s._v(" 全局变量")]),s._v(" "),t("p",[s._v("在ES6出来之前，声明变量就只有"),t("code",[s._v("var")]),s._v("这一个关键词，并且当时没有块级作用域的概念，所以顶层对象的属性与全局对象的属性是一样的，用"),t("code",[s._v("var")]),s._v("声明的全局变量也就是顶层变量。")]),s._v(" "),t("p",[t("strong",[s._v("顶层变量，在"),t("code",[s._v("浏览器")]),s._v("中是指"),t("code",[s._v("window")]),s._v("对象，在"),t("code",[s._v("node")]),s._v("环境中是指"),t("code",[s._v("Global")]),s._v("对象")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'nanjiu'")]),s._v("\n")])])]),t("h3",{attrs:{id:"局部变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#局部变量"}},[s._v("#")]),s._v(" 局部变量")]),s._v(" "),t("p",[t("strong",[s._v("在函数中用"),t("code",[s._v("var")]),s._v("声明的变量是局部变量，通过"),t("code",[s._v("window")]),s._v("或"),t("code",[s._v("global")]),s._v("访问不到")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'南玖'")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '南玖'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n")])])]),t("p",[s._v("所以当时为了解决全局变量混乱的问题，一般都会借用函数作用域在解决，这一点，你可以去看jq的源码，它的代码都是放在一个自执行函数中的，与外界隔开～")]),s._v(" "),t("p",[t("strong",[s._v("如果在函数中不使用"),t("code",[s._v("var")]),s._v("声明变量，该变量也是全局的")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    s_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'南玖'")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '南玖'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ‘南玖")]),s._v("\n")])])]),t("h3",{attrs:{id:"变量提升"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量提升"}},[s._v("#")]),s._v(" 变量提升")]),s._v(" "),t("p",[s._v("使用"),t("code",[s._v("var")]),s._v("声明的变量会存在变量提升的情况，也就是在变量声明之前，你可以访问到它，只不过它的值是"),t("code",[s._v("undefined")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'南玖'")]),s._v("\n")])])]),t("p",[s._v("上面的代码在编译时会变成以下代码，这也就是为什么你可以访问到它，但它的值是"),t("code",[s._v("undefined")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s_name\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\ns_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'南玖'")]),s._v("\n")])])]),t("h3",{attrs:{id:"可以重复声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可以重复声明"}},[s._v("#")]),s._v(" 可以重复声明")]),s._v(" "),t("p",[s._v("使用"),t("code",[s._v("var")]),s._v("关键字声明的变量可以重复声明，后者会覆盖前者")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'frontend'")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'frontend'")]),s._v("\n")])])]),t("h2",{attrs:{id:"let"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[s._v("#")]),s._v(" let")]),s._v(" "),t("blockquote",[t("p",[s._v("该关键字是ES6新增的，用来声明变量，用法与ES5中的var类似，但是所声明的变量，只在"),t("code",[s._v("let")]),s._v("命令所在的代码块中生效。（块级作用域）")])]),s._v(" "),t("h3",{attrs:{id:"块级作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[s._v("#")]),s._v(" 块级作用域")]),s._v(" "),t("p",[s._v("ES5 只有全局作用域和函数作用域，没有块级作用域，这带来很多不合理的场景。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错 Uncaught ReferenceError: s_name is not defined")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//18")]),s._v("\n")])])]),t("h3",{attrs:{id:"不存在变量提升"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不存在变量提升"}},[s._v("#")]),s._v(" 不存在变量提升")]),s._v(" "),t("p",[t("code",[s._v("var")]),s._v("命令会发生“变量提升”现象，即变量可以在声明之前使用，值为"),t("code",[s._v("undefined")]),s._v("。这种现象多多少少是有些奇怪的，按照一般的逻辑，变量应该在声明语句之后才可以使用。")]),s._v(" "),t("p",[s._v("为了纠正这种现象，"),t("code",[s._v("let")]),s._v("命令改变了语法行为，它所声明的变量一定要在声明后使用，否则报错。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n")])])]),t("h3",{attrs:{id:"暂时性死区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#暂时性死区"}},[s._v("#")]),s._v(" 暂时性死区")]),s._v(" "),t("p",[s._v("只要块级作用域内存在"),t("code",[s._v("let")]),s._v("命令，它所声明的变量就“绑定”（binding）这个区域，不再受外部的影响。")]),s._v(" "),t("p",[t("strong",[s._v("在代码块内，使用"),t("code",[s._v("let")]),s._v("命令声明变量之前，该变量都是不可用的。这在语法上，称为“暂时性死区”（temporal dead zone，简称 TDZ）。")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'南玖'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("在上面代码中声明了一个全局变量"),t("code",[s._v("name")]),s._v("和一个块级作用域中的局部变量"),t("code",[s._v("name")]),s._v("，导致后者绑定这个块级作用域，所以在"),t("code",[s._v("let")]),s._v("声明变量前，对"),t("code",[s._v("name")]),s._v("访问会报错。在let声明变量"),t("code",[s._v("name")]),s._v("之前都是变量"),t("code",[s._v("name")]),s._v("的"),t("strong",[s._v("暂时性死区")])]),s._v(" "),t("p",[t("strong",[s._v("ES6 明确规定，如果区块中存在"),t("code",[s._v("let")]),s._v("和"),t("code",[s._v("const")]),s._v("命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域。凡是在声明之前就使用这些变量，就会报错。")])]),s._v(" "),t("p",[s._v("ES6 规定暂时性死区和"),t("code",[s._v("let")]),s._v("、"),t("code",[s._v("const")]),s._v("语句不出现变量提升，主要是为了减少运行时错误，防止在变量声明前就使用这个变量，从而导致意料之外的行为。这样的错误在 ES5 是很常见的，现在有了这种规定，避免此类错误就很容易了。")]),s._v(" "),t("p",[s._v("总之，暂时性死区的本质就是，只要一进入当前作用域，所要使用的变量就已经存在了，但是不可获取，只有等到声明变量的那一行代码出现，才可以获取和使用该变量。")]),s._v(" "),t("h3",{attrs:{id:"不允许重复声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不允许重复声明"}},[s._v("#")]),s._v(" 不允许重复声明")]),s._v(" "),t("p",[t("code",[s._v("let")]),s._v("不允许在相同作用域内，重复声明同一个变量。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'南玖'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 重新声明函数参数也不行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("say")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"const"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[s._v("#")]),s._v(" const")]),s._v(" "),t("blockquote",[t("p",[s._v("该关键字是ES6新增的，用来声明常量，一旦声明，该常量的值就不能改变。")])]),s._v(" "),t("h3",{attrs:{id:"声明常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#声明常量"}},[s._v("#")]),s._v(" 声明常量")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PI")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PI")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3.14")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PI")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n")])])]),t("p",[t("code",[s._v("const")]),s._v("实际上保证的并不是变量的值不得改动，而是变量指向的那个内存地址所保存的数据不得改动")]),s._v(" "),t("p",[s._v("对于简单类型的数据，值就保存在变量指向的那个内存地址，因此等同于常量")]),s._v(" "),t("p",[s._v("对于复杂类型的数据，变量指向的内存地址，保存的只是一个指向实际数据的指针，"),t("code",[s._v("const")]),s._v("只能保证这个指针是固定的，并不能确保改变量的结构不变")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("age")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nobj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hahaha'")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可以正常运行")]),s._v("\n\nobj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n")])])]),t("h3",{attrs:{id:"声明与赋值必须同时进行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#声明与赋值必须同时进行"}},[s._v("#")]),s._v(" 声明与赋值必须同时进行")]),s._v(" "),t("p",[t("code",[s._v("const")]),s._v("声明的变量不得改变值，这意味着，"),t("code",[s._v("const")]),s._v("一旦声明变量，就必须立即初始化，不能留到以后赋值。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错 Uncaught SyntaxError: Missing initializer in const declaration")]),s._v("\n")])])]),t("h3",{attrs:{id:"块级作用域-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域-2"}},[s._v("#")]),s._v(" 块级作用域")]),s._v(" "),t("p",[t("code",[s._v("const")]),s._v("的作用域与"),t("code",[s._v("let")]),s._v("命令相同：只在声明所在的块级作用域内有效。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'nanjiu'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n")])])]),t("h3",{attrs:{id:"不存在提升-暂时性死区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不存在提升-暂时性死区"}},[s._v("#")]),s._v(" 不存在提升，暂时性死区")]),s._v(" "),t("p",[s._v("与"),t("code",[s._v("let")]),s._v("类似，"),t("code",[s._v("const")]),s._v("命令声明的常量也是不提升，同样存在暂时性死区，只能在声明的位置后面使用，否则报错。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n")])])]),t("h3",{attrs:{id:"不允许重复声明-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不允许重复声明-2"}},[s._v("#")]),s._v(" 不允许重复声明")]),s._v(" "),t("p",[t("code",[s._v("const")]),s._v("声明的常量，也与"),t("code",[s._v("let")]),s._v("一样不可重复声明。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nan'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jiu'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n")])])]),t("h2",{attrs:{id:"三者的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三者的区别"}},[s._v("#")]),s._v(" 三者的区别")]),s._v(" "),t("h3",{attrs:{id:"变量提升、暂时性死区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量提升、暂时性死区"}},[s._v("#")]),s._v(" 变量提升、暂时性死区")]),s._v(" "),t("p",[t("code",[s._v("var")]),s._v("声明的变量存在变量提升，即变量可以在声明之前调用，但是值为"),t("code",[s._v("undefined")])]),s._v(" "),t("p",[t("code",[s._v("let")]),s._v("和"),t("code",[s._v("const")]),s._v("不存在变量提升，即它们所声明的变量一定要在声明后使用，否则就会报错")]),s._v(" "),t("p",[t("code",[s._v("var")]),s._v("不存在暂时性死区")]),s._v(" "),t("p",[t("code",[s._v("let")]),s._v("和"),t("code",[s._v("const")]),s._v("存在暂时性死区，只有等到声明变量的那一行代码出现，才可以获取和使用该变量")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaoming'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// let ")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Cannot access 'name2' before initialization")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaohong'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// const")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Cannot access 'name3' before initialization")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaobai'")]),s._v("\n")])])]),t("h3",{attrs:{id:"块级作用域-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域-3"}},[s._v("#")]),s._v(" 块级作用域")]),s._v(" "),t("p",[t("code",[s._v("var")]),s._v("不存在块级作用域")]),s._v(" "),t("p",[t("code",[s._v("let")]),s._v("和"),t("code",[s._v("const")]),s._v("存在块级作用域")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaoming'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'xiaoming'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// let")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaohong'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错 Uncaught ReferenceError: name2 is not defined")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// const")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaobai'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//报错 Uncaught ReferenceError: name3 is not defined")]),s._v("\n")])])]),t("h3",{attrs:{id:"重复声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重复声明"}},[s._v("#")]),s._v(" 重复声明")]),s._v(" "),t("p",[t("code",[s._v("var")]),s._v("允许重复声明变量")]),s._v(" "),t("p",[t("code",[s._v("let")]),s._v("和"),t("code",[s._v("const")]),s._v("在同一作用域不允许重复声明变量")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaoming'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaoming2'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//xiaoming2")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//let ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaohong'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaohong2'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//const")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaobai'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaobai'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"修改变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改变量"}},[s._v("#")]),s._v(" 修改变量")]),s._v(" "),t("p",[t("code",[s._v("var")]),s._v("和"),t("code",[s._v("let")]),s._v("声明的变量可以修改")]),s._v(" "),t("p",[t("code",[s._v("const")]),s._v("声明一个只读的常量。一旦声明，常量的值就不能改变")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaoming'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaoming2'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//'xiaoming2'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//let ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaohong'")]),s._v("\n    name2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaohong2'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'xiaohong2'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//const")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaobai'")]),s._v("\n    name3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaobai2'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错 Uncaught TypeError: Assignment to constant variable.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"为什么var可以重复声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么var可以重复声明"}},[s._v("#")]),s._v(" 为什么var可以重复声明？")]),s._v(" "),t("p",[s._v("我们有时候可能会觉得JS很奇怪，与其它语言差别很大，容错率很高，一些其他语言常见的小错误JS都能大度得包容，我们可以来看下面两段代码：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'南玖'")]),s._v(" \nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '南玖'")]),s._v("\n")])])]),t("p",[s._v("使用var重复声明一个变量时，后面会覆盖前者，所以上面会打印出"),t("code",[s._v("南玖")])]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'nanjiu'")]),s._v("\n")])])]),t("p",[s._v("这里却是打印出"),t("code",[s._v("nanjiu")]),s._v(",而不是"),t("code",[s._v("undefined")]),s._v("，这个可以由我们上面讲到的变量提升来解释，但它能够重复声明是为什么呢？")]),s._v(" "),t("p",[s._v("我们得从JS代码的运行机制说起：")]),s._v(" "),t("p",[s._v("在JS代码运行过程中：\n引擎负责整个代码的编译和执行,编译器负责语法分析、词法分析、代码生成等,而作用域则负责维护所有的标识符(变量)\n当执行上面的代码时，可以简单的理解为给新变量分配一块内存，命名为"),t("code",[s._v("name")]),s._v("，并赋值为"),t("code",[s._v("nanjiu")]),s._v("；但在运行的时候编译器与引擎还会进行两项额外的操作，即判断变量是否已经声明：")]),s._v(" "),t("ul",[t("li",[s._v("首先编译器对代码拆解，从左往右遇到了"),t("code",[s._v("var name")]),s._v(", 然后去询问作用域是否存在这个变量，如果不存在就让作用域声明一个新的变量"),t("code",[s._v("name")]),s._v(",如果存在就忽略"),t("code",[s._v("var")]),s._v("继续往下编译，这时"),t("code",[s._v("name='nanjiu'")]),s._v("被编译成可执行的代码供引擎使用")]),s._v(" "),t("li",[s._v("引擎遇见"),t("code",[s._v("name='nanjiu'")]),s._v("时也会去询问作用域是否存在这个变量，若存在，则赋值为"),t("code",[s._v("nanjiu")]),s._v("，若不存在，就沿着作用域往上查找，若找到了，赋值为"),t("code",[s._v("nanjiu")]),s._v("，若没找到，让作用域声明一个新的变量"),t("code",[s._v("nanjiu")])])]),s._v(" "),t("p",[s._v("用代码解释就是：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name\nname "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var name // 忽略")]),s._v("\nname "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'南玖'")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '南玖'")]),s._v("\n")])])]),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name\nname "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// var name // 忽略")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'nanjiu'")]),s._v("\n")])])]),t("h2",{attrs:{id:"为什么let、const不能重复声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么let、const不能重复声明"}},[s._v("#")]),s._v(" 为什么let、const不能重复声明？")]),s._v(" "),t("p",[s._v("在ES6规范有一个词叫做"),t("code",[s._v("Global Enviroment Records")]),s._v("(也就是全局环境变量记录)，它里面包含两个内容，一个是"),t("code",[s._v("Object Enviroment Record")]),s._v("(它不等同于window对象)，另一个是"),t("code",[s._v("Declarative Enviroment Record")]),s._v("。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("函数声明和使用"),t("code",[s._v("var")]),s._v("声明的变量会添加进入"),t("code",[s._v("Object Enviroment Record")]),s._v("中。")])]),s._v(" "),t("li",[t("p",[s._v("使用"),t("code",[s._v("let")]),s._v("声明和使用"),t("code",[s._v("const")]),s._v("声明的变量会添加入"),t("code",[s._v("Declarative Enviroment Record")]),s._v("中。下面是ECMAscript规范中对"),t("code",[s._v("var")]),s._v(","),t("code",[s._v("let")]),s._v(","),t("code",[s._v("const")]),s._v("的一些约束。")])]),s._v(" "),t("li",[t("p",[s._v("使用"),t("code",[s._v("var")]),s._v("声明时，V8引擎只会检查"),t("code",[s._v("Declarative Enviroment Record")]),s._v("中是否有该变量，如果有，就会报错，否则将该变量添加入"),t("code",[s._v("Object Enviroment Record")]),s._v("中。")])]),s._v(" "),t("li",[t("p",[s._v("使用"),t("code",[s._v("let")]),s._v("和"),t("code",[s._v("const")]),s._v("声明时，引擎会同时检查"),t("code",[s._v("Object Enviroment Record")]),s._v("和"),t("code",[s._v("Declarative Enviroment Record")]),s._v("是否有该变量，如果有，则报错，否则将将变量添加入"),t("code",[s._v("Declarative Enviroment Record")]),s._v("中。")])])]),s._v(" "),t("p",[s._v("##在全局作用域中，用 let 和 const 声明的变量没在 window 上，那在哪里呢？我们如何去获取呢？")]),s._v(" "),t("h3",{attrs:{id:"es5与es6的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es5与es6的区别"}},[s._v("#")]),s._v(" ES5与ES6的区别")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("ES5")]),s._v("中，顶层对象的属性与全局变量是等价的，"),t("code",[s._v("var")]),s._v("与"),t("code",[s._v("function")]),s._v("声明的全局变量也是顶层变量，我们可以通过"),t("code",[s._v("window")]),s._v("或"),t("code",[s._v("global")]),s._v("来访问")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" s_name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'nanjiu'")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("say"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ƒ say() {}")]),s._v("\n")])])]),t("p",[s._v("但是"),t("code",[s._v("ES6")]),s._v("规定，"),t("code",[s._v("var")]),s._v("与"),t("code",[s._v("function")]),s._v("声明的全局变量，依旧是顶层对象的属性，但"),t("code",[s._v("let")]),s._v("，"),t("code",[s._v("const")]),s._v("、 "),t("code",[s._v("class")]),s._v("声明的全局变量，不属于顶层的属性。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s_name2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'nanjiu'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("s_name2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n")])])]),t("p",[s._v("###用 let 和 const 声明的变量在哪里呢?")]),s._v(" "),t("p",[s._v("既然用 let 和 const 声明的变量通过window访问不到，我们可以来看下浏览器是如何处理的：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" s_name2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'南玖'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" gender "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'man'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" gzh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'前端南玖'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("debugger")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[t("img",{attrs:{src:"/nanjiu/640.png",alt:"image-20220220221827523"}})]),s._v(" "),t("p",[s._v("通过上图也可以看到，在全局作用域中，用"),t("code",[s._v("var")]),s._v("声明的变量存在于全局变量"),t("code",[s._v("window")]),s._v("上，用 "),t("code",[s._v("let")]),s._v("和 "),t("code",[s._v("const")]),s._v(" 声明的全局变量并没有在全局对象中，只是一个块级作用域（Script）中，而用 "),t("code",[s._v("let")]),s._v("或 "),t("code",[s._v("const")]),s._v(" 配合"),t("code",[s._v("{}")]),s._v("声明的变量，则存在于块级作用域"),t("code",[s._v("Block")]),s._v("中。")])])}),[],!1,null,null,null);t.default=e.exports}}]);