(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{459:function(e,a,t){"use strict";t.r(a);var s=t(2),r=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),a("p",[e._v("作为前端开发者，相信大家或多或少都接触过"),a("code",[e._v("webpack")]),e._v("，现如今"),a("code",[e._v("webpack")]),e._v("已经渗透在了前端的各个方面，所以我们有必要来了解并学习"),a("code",[e._v("webpack")]),e._v("，"),a("code",[e._v("webpack")]),e._v(" 是一种用于构建 JavaScript 应用程序的静态模块打包器，它能够以一种相对一致且开放的处理方式，加载应用中的所有资源文件（图片、CSS、视频、字体文件等），并将其合并打包成浏览器兼容的 Web 资源文件。"),a("code",[e._v("webpack")]),e._v("相比其它构建工具功能更加强大，可扩展性也更强，它能够融合多种工程化工具，将开发阶段的应用代码编译、打包成适合网络分发、客户端运行的应用产物。")]),e._v(" "),a("h2",{attrs:{id:"核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[e._v("#")]),e._v(" 核心概念")]),e._v(" "),a("h3",{attrs:{id:"输入输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入输出"}},[e._v("#")]),e._v(" 输入输出")]),e._v(" "),a("h4",{attrs:{id:"entry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entry"}},[e._v("#")]),e._v(" entry")]),e._v(" "),a("blockquote",[a("p",[e._v("webpack的构建入口，"),a("strong",[e._v("入口起点(entry point)")]),e._v(" 指示 webpack 应该使用哪个模块，来作为构建其内部 "),a("a",{attrs:{href:"https://webpack.docschina.org/concepts/dependency-graph/",target:"_blank",rel:"noopener noreferrer"}},[e._v("依赖图(dependency graph)"),a("OutboundLink")],1),e._v(" 的开始。进入入口起点后，webpack 会找出有哪些模块和库是入口起点（直接和间接）依赖的。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 单入口\nmodule.exports = {\n  entry: './src/main.js'\n}\n​\n// 多入口\nmodule.exports = {\n  entry: {\n    a: './src/a.js',\n    b: './src/b.js'\n  }\n}\n")])])]),a("h4",{attrs:{id:"output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[e._v("#")]),e._v(" output")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("output")]),e._v(" 属性告诉 webpack 在哪里输出它所创建的 "),a("em",[e._v("bundle")]),e._v("，以及如何命名这些文件。主要输出文件的默认值是 "),a("code",[e._v("./dist/main.js")]),e._v("，其他生成文件默认放置在 "),a("code",[e._v("./dist")]),e._v(" 文件夹中。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 单入口\nmodule.exports = {\n  entry: './src/main.js',\n  output: {\n    filename: 'bundle.js',   \n    path: path.resolve(__dirname, 'dist'),\n  }\n}\n// 多入口\nmodule.exports = {\n  entry: {\n    a: './src/a.js',\n    b: './src/b.js'\n  },\n  output: {\n    filename: '[name].[hash:6].js', // 通过占位符确保文件名唯一，考虑缓存问题，还可以为文件名加上hash\n    path: __dirname + '/dist',\n    publicPath: '/',    // 生产环境一般是CDN地址，开发环境配置为/或不配置\n  }\n}\n")])])]),a("h3",{attrs:{id:"模块处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块处理"}},[e._v("#")]),e._v(" 模块处理")]),e._v(" "),a("h4",{attrs:{id:"loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[e._v("#")]),e._v(" loader")]),e._v(" "),a("blockquote",[a("p",[e._v("webpack 只能理解 JavaScript 和 JSON 文件，这是 webpack 开箱可用的自带能力。"),a("strong",[e._v("loader")]),e._v(" 让 webpack 能够去处理其他类型的文件，并将它们转换为有效 "),a("a",{attrs:{href:"https://webpack.docschina.org/concepts/modules",target:"_blank",rel:"noopener noreferrer"}},[e._v("模块"),a("OutboundLink")],1),e._v("，以供应用程序使用，以及被添加到依赖图中。")])]),e._v(" "),a("p",[e._v("比如：配置webpack为css文件应用"),a("code",[e._v("css-loader")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  module: {\n    rules: [\n      {test: /.css$/, use: 'css-loader'}\n    ]\n  }\n}\n")])])]),a("p",[a("a",{attrs:{href:"https://webpack.docschina.org/configuration/module/#modulerules",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("module.rules")]),a("OutboundLink")],1),e._v(" 允许你在 webpack 配置中指定多个 loader。 这种方式是展示 loader 的一种简明方式，并且有助于使代码变得简洁和易于维护。")]),e._v(" "),a("h4",{attrs:{id:"plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[e._v("#")]),e._v(" plugin")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("插件")]),e._v(" 是 webpack 的 "),a("a",{attrs:{href:"https://github.com/webpack/tapable",target:"_blank",rel:"noopener noreferrer"}},[e._v("支柱"),a("OutboundLink")],1),e._v(" 功能。Webpack 自身也是构建于你在 webpack 配置中用到的 "),a("strong",[e._v("相同的插件系统")]),e._v(" 之上！")]),e._v(" "),a("p",[e._v("插件目的在于解决 "),a("a",{attrs:{href:"https://webpack.docschina.org/concepts/loaders",target:"_blank",rel:"noopener noreferrer"}},[e._v("loader"),a("OutboundLink")],1),e._v(" 无法实现的"),a("strong",[e._v("其他事")]),e._v("。Webpack 提供很多开箱即用的 "),a("a",{attrs:{href:"https://webpack.docschina.org/plugins/",target:"_blank",rel:"noopener noreferrer"}},[e._v("插件"),a("OutboundLink")],1),e._v("。")])]),e._v(" "),a("p",[e._v("比如：为编译过程添加进度报告插件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const Webpack = require('webpack')\nmodule.exports = {\n  plugins: [new Webpack.ProgressPlugin()]\n}\n")])])]),a("h4",{attrs:{id:"resolve"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resolve"}},[e._v("#")]),e._v(" resolve")]),e._v(" "),a("blockquote",[a("p",[e._v("用于配置模块路径解析规则，可用于帮助 Webpack 更精确、高效地找到指定模块")])]),e._v(" "),a("p",[e._v("比如配置别名：")]),e._v(" "),a("p",[e._v("创建 "),a("code",[e._v("import")]),e._v(" 或 "),a("code",[e._v("require")]),e._v(" 的别名，来确保模块引入变得更简单。例如，一些位于 "),a("code",[e._v("src/")]),e._v(" 文件夹下的常用模块：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  resolve: {\n    alias: {\n      node_modules: path.resolve(__dirname, './node_modules'),\n      '@': path.resolve(__dirname, './src'),\n      api: path.resolve(__dirname, './src/api'),\n      components: path.join(__dirname, './src/components'),\n    }\n  }\n}\n")])])]),a("h4",{attrs:{id:"module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[e._v("#")]),e._v(" module")]),e._v(" "),a("blockquote",[a("p",[e._v("这些选项决定了如何处理项目中的"),a("a",{attrs:{href:"https://webpack.docschina.org/concepts/modules",target:"_blank",rel:"noopener noreferrer"}},[e._v("不同类型的模块"),a("OutboundLink")],1),e._v("。")])]),e._v(" "),a("p",[e._v("比如我们常见的loader就是在"),a("code",[e._v("module.rules")]),e._v("内配置的。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  module: {\n    rules: [\n      {test: /.css$/, use: 'css-loader'}\n    ]\n  }\n}\n")])])]),a("h4",{attrs:{id:"externals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#externals"}},[e._v("#")]),e._v(" externals")]),e._v(" "),a("blockquote",[a("p",[e._v("用于声明外部资源，Webpack 会直接忽略这部分资源，跳过这些资源的解析、打包操作")])]),e._v(" "),a("p",[e._v("比如"),a("strong",[e._v("防止")]),e._v("将某些 "),a("code",[e._v("import")]),e._v(" 的包(package)"),a("strong",[e._v("打包")]),e._v("到 bundle 中，而是在运行时(runtime)再去从外部获取这些"),a("em",[e._v("扩展依赖(external dependencies)")]),e._v(" 。")]),e._v(" "),a("p",[e._v("比如：从CDN引入Vue")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('\x3c!-- index.html --\x3e\n<script src="https://cdn.bootcdn.net/ajax/libs/vue/2.6.3/vue.min.js"><\/script>\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// webpack.config.js\nmodule.exports = {\n  externals: {\n    vue: 'vue'\n  }\n}\n")])])]),a("h3",{attrs:{id:"后处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后处理"}},[e._v("#")]),e._v(" 后处理")]),e._v(" "),a("h4",{attrs:{id:"optimization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization"}},[e._v("#")]),e._v(" optimization")]),e._v(" "),a("blockquote",[a("p",[e._v("用于控制如何优化产物包体积，内置 Dead Code Elimination、Scope Hoisting、代码混淆、代码压缩等功能")]),e._v(" "),a("p",[e._v("从 webpack 4 开始，会根据你选择的 "),a("a",{attrs:{href:"https://webpack.docschina.org/concepts/mode/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("mode")]),a("OutboundLink")],1),e._v(" 来执行不同的优化， 不过所有的优化还是可以手动配置和重写。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  //...\n  optimization: {\n    chunkIds: 'named',\n  },\n};\n")])])]),a("h4",{attrs:{id:"target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#target"}},[e._v("#")]),e._v(" target")]),e._v(" "),a("blockquote",[a("p",[e._v("用于配置编译产物的目标运行环境，支持 web、node、electron 等值，不同值最终产物会有所差异")])]),e._v(" "),a("p",[e._v("比如：target设置为node，webpack将在node环境下进行编译")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  target: 'node'\n}\n")])])]),a("h4",{attrs:{id:"mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mode"}},[e._v("#")]),e._v(" mode")]),e._v(" "),a("blockquote",[a("p",[e._v("提供 "),a("code",[e._v("mode")]),e._v(" 配置选项，告知 webpack 使用相应模式的内置优化。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("string = 'production': 'none' | 'development' | 'production'\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  mode: 'development',\n};\n")])])]),a("p",[e._v("或者从cli"),a("code",[e._v("--mode")]),e._v(" 参数进行传递")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("webpack --mode development\n")])])]),a("h3",{attrs:{id:"开发效率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发效率"}},[e._v("#")]),e._v(" 开发效率")]),e._v(" "),a("h4",{attrs:{id:"watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[e._v("#")]),e._v(" watch")]),e._v(" "),a("blockquote",[a("p",[e._v("启用 Watch 模式。这意味着在初始构建之后，webpack 将继续监听任何已解析文件的更改。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  watch: true\n}\n")])])]),a("p",[a("strong",[e._v("⚠️注意："),a("code",[e._v("webpack-dev-server")]),e._v("和"),a("code",[e._v("webpack-dev-middleware")]),e._v("默认是开启watch模式的")])]),e._v(" "),a("h4",{attrs:{id:"devtool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devtool"}},[e._v("#")]),e._v(" devtool")]),e._v(" "),a("blockquote",[a("p",[e._v("此选项控制是否生成，以及如何生成 source map。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("string = 'eval' | false\n")])])]),a("p",[e._v("选择一种 "),a("a",{attrs:{href:"http://blog.teamtreehouse.com/introduction-source-maps",target:"_blank",rel:"noopener noreferrer"}},[e._v("source map"),a("OutboundLink")],1),e._v(" 风格来增强调试过程。不同的值会明显影响到构建(build)和重新构建(rebuild)的速度。")]),e._v(" "),a("h4",{attrs:{id:"devserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devserver"}},[e._v("#")]),e._v(" devServer")]),e._v(" "),a("blockquote",[a("p",[e._v("用于配置与 HMR 强相关的开发服务器功能")])]),e._v(" "),a("p",[e._v("通过 "),a("a",{attrs:{href:"https://github.com/webpack/webpack-dev-server",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack-dev-server"),a("OutboundLink")],1),e._v(" 的这些配置，能够以多种方式改变其行为，这里比较常见的配置有："),a("code",[e._v("port")]),e._v("、"),a("code",[e._v("host")]),e._v("、"),a("code",[e._v("proxy")]),e._v("等")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  devServer: {\n    static: {\n      directory: path.join(__dirname, 'public'),\n    },\n    compress: true,\n    port: 9000,\n  }\n}\n")])])]),a("h4",{attrs:{id:"cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache"}},[e._v("#")]),e._v(" cache")]),e._v(" "),a("blockquote",[a("p",[e._v("Webpack 5 之后，该项用于控制如何缓存编译过程信息与编译结果")])]),e._v(" "),a("p",[e._v("缓存生成的 webpack 模块和 chunk，来改善构建速度。"),a("code",[e._v("cache")]),e._v(" 会在"),a("a",{attrs:{href:"https://webpack.docschina.org/configuration/mode/#mode-development",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("开发")]),e._v(" 模式"),a("OutboundLink")],1),e._v("被设置成 "),a("code",[e._v("type: 'memory'")]),e._v(" 而且在 "),a("a",{attrs:{href:"https://webpack.docschina.org/configuration/mode/#mode-production",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("生产")]),e._v(" 模式"),a("OutboundLink")],1),e._v(" 中被禁用。 "),a("code",[e._v("cache: true")]),e._v(" 与 "),a("code",[e._v("cache: { type: 'memory' }")]),e._v(" 配置作用一致。 传入 "),a("code",[e._v("false")]),e._v(" 会禁用缓存:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  cache: false\n}\n")])])]),a("h2",{attrs:{id:"上手配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上手配置"}},[e._v("#")]),e._v(" 上手配置")]),e._v(" "),a("p",[e._v("了解完上面这些webpack核心概念，我们可以尝试来手动配置好一个Vue开发环境")]),e._v(" "),a("h3",{attrs:{id:"初始化项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化项目"}},[e._v("#")]),e._v(" 初始化项目")]),e._v(" "),a("p",[e._v("首先"),a("code",[e._v("npm init -y")]),e._v("初始化"),a("code",[e._v("package.json")]),e._v("文件")]),e._v(" "),a("p",[e._v("接着安装好我们的"),a("code",[e._v("webpack")]),e._v("、"),a("code",[e._v("webpack-cli")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm i webpack webpack-cli -D\n")])])]),a("p",[a("strong",[e._v("⚠️注意： 我这里的webpack是5版本的")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"webpack": "^5.85.1",\n"webpack-cli": "^4.7.2",\n')])])]),a("h3",{attrs:{id:"处理vue代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理vue代码"}},[e._v("#")]),e._v(" 处理Vue代码")]),e._v(" "),a("p",[e._v("原生 Webpack 并不能处理这种内容格式的文件，为此我们需要引入专用于 Vue SFC 的加载器："),a("code",[e._v("vue-loader")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm i vue-loader\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// webpack.config.js\n\nconst Webpack = require('webpack')\nconst {VueLoaderPlugin}  = require('vue-loader')\nmodule.exports = {\n    entry: './src/main.js',\n    output: {\n        filename: 'bundle.[hash:6].js',\n        path: __dirname + '/dist',\n    },\n    module: {\n        rules:[\n            {test: /.vue$/, use: 'vue-loader'}, \n        ]\n    },\n    plugins:[\n        new Webpack.ProgressPlugin(),\n        new VueLoaderPlugin(),\n    ],\n}\n")])])]),a("p",[a("strong",[e._v("提示："),a("code",[e._v("vue-loader")]),e._v(" 库同时提供用于处理 SFC 代码转译的 Loader 组件，与用于处理上下文兼容性的 Plugin 组件，两者需要同时配置才能正常运行。")])]),e._v(" "),a("p",[e._v("此时我们的文件结构是这样的，大致与Vue项目结构一致")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/69f2241f775047dda69e919b0ea73ae8~tplv-k3u1fbpfcp-watermark.image?",alt:"image-20230608153505449.png"}})]),e._v(" "),a("p",[e._v("尝试启动看一下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// package.json\n"dev": "webpack --mode development",\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm run dev\n")])])]),a("p",[e._v("由于我们的vue文件中有css内容，而webpack默认是不理解css内容的，所以导致报错了")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7c6c70ae07c24db1880f62e9016ea25c~tplv-k3u1fbpfcp-watermark.image?",alt:"image-20230608153951984.png"}})]),e._v(" "),a("h3",{attrs:{id:"处理css内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理css内容"}},[e._v("#")]),e._v(" 处理CSS内容")]),e._v(" "),a("p",[e._v("这里需要安装"),a("code",[e._v("style-loader")]),e._v("、"),a("code",[e._v("css-loader")]),e._v("来进行处理。")]),e._v(" "),a("p",[e._v("修改webpack配置")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// webpack.config.js\nconst Webpack = require('webpack')\nconst {VueLoaderPlugin}  = require('vue-loader')\nmodule.exports = {\n    entry: './src/main.js',\n    output: {\n        filename: 'bundle.[hash:6].js',\n        path: __dirname + '/dist',\n    },\n    module: {\n        rules:[\n            {test: /.vue$/, use: 'vue-loader'},\n            {\n                test: /.css$/,\n                use: ['style-loader', 'css-loader']\n            }\n        ]\n    },\n    plugins:[\n        new Webpack.ProgressPlugin(),\n        new VueLoaderPlugin(),\n    ],\n}\n")])])]),a("p",[e._v("此时再跑起来，发现没有报错了。")]),e._v(" "),a("h3",{attrs:{id:"处理js内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理js内容"}},[e._v("#")]),e._v(" 处理JS内容")]),e._v(" "),a("p",[e._v("我们平时在开发中肯定会用到"),a("code",[e._v("ES6")]),e._v("语法，这里我们也需要配置对应的"),a("code",[e._v("loader")]),e._v("来进行处理")]),e._v(" "),a("p",[a("strong",[e._v("安装babel-loader")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm i babel-loader @babel/preset-env @babel/core\n")])])]),a("p",[a("strong",[e._v("配置")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  module: {\n    rules: [\n      {\n        test: /.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: ['@babel/preset-env']\n          }\n        },\n        exclude: /node_modules/\n      }\n    ]\n  }\n}\n")])])]),a("p",[e._v("当然这里的options配置你也可以在"),a("code",[e._v(".babelrc")]),e._v("或"),a("code",[e._v("babel.config.js")]),e._v("中单独配置。")]),e._v(" "),a("h3",{attrs:{id:"处理图片资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理图片资源"}},[e._v("#")]),e._v(" 处理图片资源")]),e._v(" "),a("p",[e._v("与CSS一样，webpack也是默认不理解图片的，所以这里也需要配置loader进行处理。")]),e._v(" "),a("p",[a("strong",[e._v("webpack4")])]),e._v(" "),a("p",[e._v("在webpack4中，我们常用的处理图片的loader有："),a("code",[e._v("file-loader")]),e._v("、"),a("code",[e._v("url-loader")])]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://v4.webpack.js.org/loaders/file-loader/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("file-loader")]),a("OutboundLink")],1),e._v(" 将文件发送到输出目录")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// webpack.config.js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [{\n      test: /.(png|jpg|gif|jpeg)$/,\n      use: ['file-loader']\n    }],\n  },\n};\n")])])]),a("p",[e._v("经过 "),a("code",[e._v("file-loader")]),e._v(" 处理后，原始图片会被重命名并复制到产物文件夹，同时在代码中插入图片 URL 地址")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://v4.webpack.js.org/loaders/url-loader/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("url-loader")]),a("OutboundLink")],1),e._v(" 将文件作为 data URI 内联到 bundle 中，它有两种表现，对于小于阈值 "),a("code",[e._v("limit")]),e._v(" 的图像直接转化为 base64 编码；大于阈值的图像则调用 "),a("code",[e._v("file-loader")]),e._v(" 进行加载")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  // ...\n  module: {\n    rules: [{\n      test: /.(png|jpg|gif|jpeg)$/,\n      use: [{\n        loader: 'url-loader',\n        options: {\n          limit: 1024\n        }\n      }]\n    }],\n  },\n};\n")])])]),a("p",[e._v("经过 "),a("code",[e._v("url-loader")]),e._v(" 处理后，小于 "),a("code",[e._v("limit")]),e._v(" 参数即 1024B 的图片会被转译为 Base64 编码，对于超过 "),a("code",[e._v("limit")]),e._v(" 值的图片则直接调用 "),a("code",[e._v("file-loader")]),e._v(" 完成加载。")]),e._v(" "),a("p",[a("strong",[e._v("webpack5")])]),e._v(" "),a("p",[a("code",[e._v("file-loader")]),e._v("、"),a("code",[e._v("url-loader")]),e._v("并不局限于处理图片，它们还可以被用于加载任意类型的多媒体或文本文件，使用频率极高，几乎已经成为标配组件！所以 Webpack5 直接内置了这些能力，开箱即可使用。")]),e._v(" "),a("p",[e._v("用法上，原本需要安装、导入 Loader，Webpack5 之后只需要通过 "),a("code",[e._v("module.rules.type")]),e._v(" 属性指定"),a("a",{attrs:{href:"https%3A%2F%2Fwebpack.js.org%2Fguides%2Fasset-modules%2F"}},[e._v("资源类型")]),e._v("即可")]),e._v(" "),a("p",[e._v("比如：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("module.exports = {\n  // ...\n  module: {\n    rules: [{\n      test: /.(png|jpg|gif|jpeg)$/,\n      type: 'asset/resource'\n    }],\n  },\n};\n")])])]),a("h3",{attrs:{id:"运行页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行页面"}},[e._v("#")]),e._v(" 运行页面")]),e._v(" "),a("p",[e._v("配置了这么多内容，我们却还不能看到页面的内容，心里肯定不乐意，上面这几步操作其实就相当于翻译 Vue SFC 文件的内容，接下来我们还需要让页面真正运行起来。")]),e._v(" "),a("h4",{attrs:{id:"粗暴方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#粗暴方案"}},[e._v("#")]),e._v(" 粗暴方案")]),e._v(" "),a("p",[e._v("有一种快速验证我们的打包配置是否正确：我们只需要新建一个html文件，将打包产物引入进去，并创建好挂载节点就可以")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('\x3c!-- public/index.html --\x3e\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>Document</title>\n    \n</head>\n<body>\n    <div id="app"></div>\n    <script src="../dist/bundle.42603d.js"><\/script>\n</body>\n</html>\n')])])]),a("p",[e._v("我们再把这个html文件在浏览器打开，就能看到我们vue项目能够正常打开了。")]),e._v(" "),a("p",[a("strong",[e._v("这种方案有一种弊端就是：我们打包出来的文件一般都会带有"),a("code",[e._v("hash")]),e._v("，那就需要我们每次在打包完后去"),a("code",[e._v("html")]),e._v("文件修改引入的文件，这样是不是有点太费劲了，你们能忍吗？")])]),e._v(" "),a("h4",{attrs:{id:"优雅方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优雅方案"}},[e._v("#")]),e._v(" 优雅方案")]),e._v(" "),a("p",[e._v("上面那种方案在日常开发中显然是不能接受的，身为程序员能偷懒的地方必须得偷懒！")]),e._v(" "),a("p",[e._v("我们可以利用下面两个工具让这个过程变得更加智能化、自动化。")]),e._v(" "),a("p",[a("strong",[e._v("html-webpack-plugin： 自动生成 HTML 页面")])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/jantimon/html-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("HtmlWebpackPlugin")]),a("OutboundLink")],1),e._v(" 简化了 HTML 文件的创建，以便为你的 webpack 包提供服务。这对于那些文件名中包含哈希值，并且哈希值会随着每次编译而改变的 webpack 包特别有用。")]),e._v(" "),a("p",[a("strong",[e._v("webpack-dev-server ：让页面真正运行起来，并具备热更新能力。")])]),e._v(" "),a("p",[a("code",[e._v("webpack-dev-server")]),e._v(" 主要提供两种功能：")]),e._v(" "),a("ul",[a("li",[e._v("结合 Webpack 工作流，提供基于 HTTP(S) 协议的静态资源服务；")]),e._v(" "),a("li",[e._v("提供资源热更新能力，在保持页面状态前提下自动更新页面代码，提升开发效率。")])]),e._v(" "),a("p",[a("strong",[e._v("安装")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm i html-webpack-plugin webpack-dev-server\n")])])]),a("p",[a("strong",[e._v("修改配置")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("​\nconst Webpack = require('webpack')\nconst {VueLoaderPlugin}  = require('vue-loader')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nmodule.exports = {\n    entry: './src/main.js',\n    output: {\n        filename: 'bundle.[hash:6].js',\n        path: __dirname + '/dist',\n    },\n    module: {\n        rules:[\n            {test: /.vue$/, use: 'vue-loader'},\n            {\n                test: /.css$/,\n                use: ['style-loader', 'css-loader']\n            },\n            {\n                test: /.js$/,\n                use: {\n                    loader: 'babel-loader',\n                    options: {\n                        presets: ['@babel/preset-env']\n                    }\n                },\n                exclude: /node_modules/\n            },\n            {\n                test: /.(png|jpg|gif|jpeg)$/,\n                type: 'asset/resource',\n            }\n        ]\n    },\n    plugins:[\n        new Webpack.ProgressPlugin(),\n        new VueLoaderPlugin(),\n        new HtmlWebpackPlugin({\n            template: './public/index.html',\n            filename: 'index.html'\n        })\n    ],\n    devServer: {\n        hot: true,\n        open: true\n    }\n}\n")])])]),a("p",[a("strong",[e._v("修改启动脚本")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"dev": "webpack serve --mode development"\n')])])]),a("p",[a("strong",[e._v("运行")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm run dev\n")])])]),a("p",[e._v("这时webpack就能自动帮我们打开浏览器运行页面了")]),e._v(" "),a("p",[e._v("vue文件内容如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<template>\n    <div class="title">webpack + vue -- {{ name }}</div>\n    <img src="../asset/1.png" class="top_bg" />\n</template>\n​\n<script setup>\nimport { ref } from \'vue\'\nconst name = ref(\'前端南玖\')\n<\/script>\n​\n<style>\n.title {\n    font-size: 16px;\n    font-weight: bold;\n    color: salmon;\n}\n.top_bg {\n    width: 100%;\n    height: auto;\n}\n</style>\n')])])]),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79f71e5910f94b7aaacc9ba5f421d0b1~tplv-k3u1fbpfcp-watermark.image?",alt:"image-20230609140930576.png"}})]),e._v(" "),a("p",[a("strong",[e._v("如果这篇文章有帮助到你，❤️关注+点赞❤️鼓励一下作者，文章公众号首发，关注 "),a("code",[e._v("前端南玖")]),e._v(" 第一时间获取最新文章～")])])])}),[],!1,null,null,null);a.default=r.exports}}]);